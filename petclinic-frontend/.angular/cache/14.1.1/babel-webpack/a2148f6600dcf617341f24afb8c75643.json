{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { PetTypeService } from '../../pettypes/pettype.service';\nimport { PetService } from '../pet.service';\nimport { OwnerService } from '../../owners/owner.service';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../owners/owner.service\";\nimport * as i2 from \"../pet.service\";\nimport * as i3 from \"../../pettypes/pettype.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/datepicker\";\n\nfunction PetAddComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PetAddComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \"BirthDate is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PetAddComponent_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", type_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", type_r9.name, \" \");\n  }\n}\n\nfunction PetAddComponent_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \"pettype is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let PetAddComponent = /*#__PURE__*/(() => {\n  class PetAddComponent {\n    constructor(ownerService, petService, petTypeService, router, route) {\n      this.ownerService = ownerService;\n      this.petService = petService;\n      this.petTypeService = petTypeService;\n      this.router = router;\n      this.route = route;\n      this.addedSuccess = false;\n      this.pet = {};\n      this.currentOwner = {};\n      this.currentType = {};\n      this.petTypes = [];\n    }\n\n    ngOnInit() {\n      this.petTypeService.getPetTypes().subscribe(pettypes => this.petTypes = pettypes, error => this.errorMessage = error);\n      const ownerId = this.route.snapshot.params.id;\n      this.ownerService.getOwnerById(ownerId).subscribe(response => {\n        this.currentOwner = response;\n      }, error => this.errorMessage = error);\n    }\n\n    onSubmit(pet) {\n      pet.id = null;\n      pet.owner = this.currentOwner; // format output from datepicker to short string yyyy-mm-dd format (rfc3339)\n\n      pet.birthDate = moment(pet.birthDate).format('YYYY-MM-DD');\n      this.petService.addPet(pet).subscribe(newPet => {\n        this.pet = newPet;\n        this.addedSuccess = true;\n        this.gotoOwnerDetail();\n      }, error => this.errorMessage = error);\n    }\n\n    gotoOwnerDetail() {\n      this.router.navigate(['/owners', this.currentOwner.id]);\n    }\n\n  }\n\n  PetAddComponent.ɵfac = function PetAddComponent_Factory(t) {\n    return new (t || PetAddComponent)(i0.ɵɵdirectiveInject(i1.OwnerService), i0.ɵɵdirectiveInject(i2.PetService), i0.ɵɵdirectiveInject(i3.PetTypeService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  PetAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PetAddComponent,\n    selectors: [[\"app-pet-add\"]],\n    inputs: {\n      currentType: \"currentType\"\n    },\n    decls: 52,\n    vars: 40,\n    consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [\"petForm\", \"ngForm\"], [\"hidden\", \"true\", 1, \"form-group\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"id\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"owner\", \"name\", \"owner\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"for\", \"owner\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"id\", \"owner_name\", \"name\", \"owner_name\", \"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"form-group\", \"has-feedback\"], [\"for\", \"name\", 1, \"col-sm-2\", \"control-label\"], [\"id\", \"name\", \"name\", \"name\", \"required\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"form-control-feedback\"], [\"class\", \"help-block\", 4, \"ngIf\"], [1, \"col-sm-2\", \"control-label\"], [\"matInput\", \"\", \"required\", \"\", \"name\", \"birthDate\", 3, \"matDatepicker\", \"ngModel\"], [\"birthDate\", \"ngModel\"], [\"matSuffix\", \"\", 3, \"for\"], [\"birthDateDatepicker\", \"\"], [1, \"control-group\"], [\"for\", \"type\", 1, \"col-sm-2\", \"control-label\"], [\"id\", \"type\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"ngModel\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"], [1, \"help-block\"], [3, \"ngValue\"]],\n    template: function PetAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \" Add Pet \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function PetAddComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PetAddComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.pet.id = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PetAddComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.pet.owner = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Owner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"label\", 12);\n        i0.ɵɵtext(17, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function PetAddComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.pet.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"span\", 15);\n        i0.ɵɵtemplate(22, PetAddComponent_span_22_Template, 2, 0, \"span\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"label\", 17);\n        i0.ɵɵtext(25, \"Birth Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 9);\n        i0.ɵɵelement(27, \"input\", 18, 19);\n        i0.ɵɵpipe(29, \"date\");\n        i0.ɵɵelement(30, \"mat-datepicker-toggle\", 20)(31, \"mat-datepicker\", null, 21)(33, \"span\", 15);\n        i0.ɵɵtemplate(34, PetAddComponent_span_34_Template, 2, 0, \"span\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 22)(36, \"div\", 11)(37, \"label\", 23);\n        i0.ɵɵtext(38, \"Type \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 9)(40, \"select\", 24, 25);\n        i0.ɵɵlistener(\"ngModelChange\", function PetAddComponent_Template_select_ngModelChange_40_listener($event) {\n          return ctx.pet.type = $event;\n        });\n        i0.ɵɵtemplate(42, PetAddComponent_option_42_Template, 2, 2, \"option\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"span\", 15);\n        i0.ɵɵtemplate(44, PetAddComponent_span_44_Template, 2, 0, \"span\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"div\", 7)(46, \"div\", 27);\n        i0.ɵɵelement(47, \"br\");\n        i0.ɵɵelementStart(48, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function PetAddComponent_Template_button_click_48_listener() {\n          return ctx.gotoOwnerDetail();\n        });\n        i0.ɵɵtext(49, \"< Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"button\", 29);\n        i0.ɵɵtext(51, \"Save Pet\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(20);\n\n        const _r3 = i0.ɵɵreference(28);\n\n        const _r4 = i0.ɵɵreference(32);\n\n        const _r6 = i0.ɵɵreference(41);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.pet.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.pet.owner);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate2(\"value\", \"\", ctx.currentOwner.firstName, \" \", ctx.currentOwner.lastName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"has-success\", _r1.dirty && _r1.valid)(\"has-error\", _r1.dirty && !_r1.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pet.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"glyphicon-ok\", _r1.valid)(\"glyphicon-remove\", !_r1.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r1.dirty && _r1.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"has-success\", _r3.dirty && _r3.valid)(\"has-error\", _r3.dirty && !_r3.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", _r4)(\"ngModel\", i0.ɵɵpipeBind2(29, 37, ctx.pet.birthDate, \"yyyy-MM-dd\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r4);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"glyphicon-ok\", _r3.valid)(\"glyphicon-remove\", !_r3.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r3.dirty && _r3.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"has-success\", _r6.dirty && _r6.valid)(\"has-error\", _r6.dirty && !_r6.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pet.type);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.petTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"glyphicon-ok\", _r6.valid)(\"glyphicon-remove\", !_r6.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r6.dirty && _r6.hasError(\"required\"));\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.MatDatepicker, i7.MatDatepickerInput, i7.MatDatepickerToggle, i5.DatePipe]\n  });\n  return PetAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}