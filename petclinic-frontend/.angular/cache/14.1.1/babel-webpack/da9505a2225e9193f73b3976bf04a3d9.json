{"ast":null,"code":"/*\n *\n *  * Copyright 2016-2017 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\nimport { EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SpecialtyService } from '../specialty.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../specialty.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"specialityForm\"];\n\nfunction SpecialtyAddComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SpecialtyAddComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Loading... \");\n    i0.ɵɵtemplate(2, SpecialtyAddComponent_div_8_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors.required);\n  }\n}\n\nexport let SpecialtyAddComponent = /*#__PURE__*/(() => {\n  class SpecialtyAddComponent {\n    constructor(specialtyService) {\n      this.specialtyService = specialtyService;\n      this.addedSuccess = false;\n      this.newSpeciality = new EventEmitter();\n      this.speciality = {};\n    }\n\n    ngOnInit() {}\n\n    onSubmit(specialty) {\n      specialty.id = null;\n      this.specialtyService.addSpecialty(specialty).subscribe(newSpecialty => {\n        this.speciality = newSpecialty;\n        this.addedSuccess = true;\n        this.newSpeciality.emit(this.speciality);\n      }, error => this.errorMessage = error);\n    }\n\n  }\n\n  SpecialtyAddComponent.ɵfac = function SpecialtyAddComponent_Factory(t) {\n    return new (t || SpecialtyAddComponent)(i0.ɵɵdirectiveInject(i1.SpecialtyService));\n  };\n\n  SpecialtyAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpecialtyAddComponent,\n    selectors: [[\"app-specialty-add\"]],\n    viewQuery: function SpecialtyAddComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.specialityForm = _t.first);\n      }\n    },\n    outputs: {\n      newSpeciality: \"newSpeciality\"\n    },\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [\"specialtyForm\", \"ngForm\"], [\"hidden\", \"true\", 1, \"form-group\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"id\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\", \"has-feedback\"], [1, \"form-group\"], [1, \"col-sm-1\", \"control-label\"], [1, \"col-sm-6\"], [\"id\", \"name\", \"name\", \"name\", \"type\", \"text\", \"name\", \"specialityName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"specialityName\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function SpecialtyAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"New Specialty\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function SpecialtyAddComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit(ctx.specialityForm.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SpecialtyAddComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.speciality.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, SpecialtyAddComponent_div_8_Template, 3, 1, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function SpecialtyAddComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.speciality.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 13);\n        i0.ɵɵtext(17, \"Save\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(15);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.speciality.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.invalid && (_r2.dirty || _r2.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.speciality.name);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm]\n  });\n  return SpecialtyAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}