{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorHandler } from '../error.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport let PetService = /*#__PURE__*/(() => {\n  class PetService {\n    constructor(http, httpErrorHandler) {\n      this.http = http;\n      this.httpErrorHandler = httpErrorHandler;\n      this.entityUrl = environment.REST_API_URL + 'pets';\n      this.handlerError = httpErrorHandler.createHandleError('OwnerService');\n    }\n\n    getPets() {\n      return this.http.get(this.entityUrl).pipe(catchError(this.handlerError('getPets', [])));\n    }\n\n    getPetById(petId) {\n      return this.http.get(this.entityUrl + '/' + petId).pipe(catchError(this.handlerError('getPetById', {})));\n    }\n\n    addPet(pet) {\n      const ownerId = pet.owner.id;\n      const ownersUrl = environment.REST_API_URL + `owners/${ownerId}/pets`;\n      return this.http.post(ownersUrl, pet).pipe(catchError(this.handlerError('addPet', pet)));\n    }\n\n    updatePet(petId, pet) {\n      return this.http.put(this.entityUrl + '/' + petId, pet).pipe(catchError(this.handlerError('updatePet', pet)));\n    }\n\n    deletePet(petId) {\n      return this.http.delete(this.entityUrl + '/' + petId).pipe(catchError(this.handlerError('deletePet', 0)));\n    }\n\n  }\n\n  PetService.ɵfac = function PetService_Factory(t) {\n    return new (t || PetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n  };\n\n  PetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetService,\n    factory: PetService.ɵfac\n  });\n  return PetService;\n})();","map":null,"metadata":{},"sourceType":"module"}